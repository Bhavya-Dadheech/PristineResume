{"version":3,"file":"static/js/517.af1f8b28.chunk.js","mappings":"+MAEO,MAAMA,EAAaC,IACjB,CACLC,KAAMC,EAAAA,EACNC,QAASH,ICiMb,EAtMkB,CAChB,MACA,MACA,SACA,OACA,OACA,SACA,aACA,UACA,mBACA,WACA,aACA,QACA,MACA,0BACA,OACA,oBACA,iBACA,cACA,kBACA,sBACA,YACA,SACA,cACA,uBACA,oBACA,uCACA,kBACA,gBACA,qBACA,iBACA,gBACA,gBACA,gBACA,kBACA,oBACA,eACA,aACA,eACA,cACA,aACA,uBACA,eACA,QACA,KACA,MACA,QACA,UACA,SACA,UACA,uBACA,IACA,QACA,UACA,WACA,SACA,8BACA,6BACA,oCACA,SACA,aACA,UACA,aACA,mBACA,QACA,oBACA,YACA,2EACA,kCACA,2BACA,sBACA,oBACA,oBACA,kCACA,oBACA,kBACA,kBACA,wBACA,mBACA,kCACA,oBACA,mCACA,gCACA,aACA,yBACA,oBACA,eACA,cACA,uBACA,qCACA,oCACA,uBACA,sEACA,aACA,gBACA,eACA,0BACA,eACA,kBACA,+BACA,eACA,6BACA,aACA,iCACA,kBACA,6BACA,oBACA,qBACA,cACA,qBACA,cACA,WACA,SACA,QACA,WACA,wBACA,WACA,oBACA,SACA,YACA,gBACA,mBACA,WACA,oBACA,uBACA,WACA,UACA,iBACA,iBACA,YACA,wBACA,YACA,oBACA,aACA,oBACA,kBACA,aACA,aACA,cACA,cACA,UACA,uBACA,YACA,0CACA,6BACA,mBACA,2BACA,sBACA,aACA,cACA,kBACA,mBACA,kBACA,cACA,uBACA,aACA,kBACA,kBACA,cACA,mCACA,uCACA,UACA,aACA,SACA,wBACA,WACA,YACA,qBACA,sBACA,qBACA,UACA,eACA,cACA,YACA,cACA,wCACA,kBACA,eACA,iBACA,sBACA,eACA,kBACA,wBACA,gBACA,iBACA,eACA,oBACA,uBACA,cACA,2BACA,wBACA,gBACA,aACA,cACA,YACA,O,aC3La,SAASI,EAAMC,GAAmB,IAAlB,YAAEC,GAAaD,EAC5C,MAAME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","sources":["redux/skills/skillsActions.js","models/skillsList.js","components/Skills.js"],"sourcesContent":["import { SET_SKILLS } from \"./skillsTypes\";\r\n\r\nexport const setSkills = (skillsState) => {\r\n  return {\r\n    type: SET_SKILLS,\r\n    payload: skillsState\r\n  };\r\n};\r\n","const skillList = [\r\n  \"C++\",\r\n  \"SQL\",\r\n  \"Python\",\r\n  \"Java\",\r\n  \"HTML\",\r\n  \"Ladder\",\r\n  \"JavaScript\",\r\n  \"Servers\",\r\n  \"Network Security\",\r\n  \"Big Data\",\r\n  \"Algorithms\",\r\n  \"SPARK\",\r\n  \"SAS\",\r\n  \"Artificial Intelligence\",\r\n  \"Ruby\",\r\n  \"Analytical Skills\",\r\n  \"Data Analytics\",\r\n  \"Data Mining\",\r\n  \"Database Design\",\r\n  \"Database Management\",\r\n  \"Debugging\",\r\n  \"Design\",\r\n  \"Development\",\r\n  \"Network Architecture\",\r\n  \"Operating Systems\",\r\n  \"Software Development and Programming\",\r\n  \"Cloud Computing\",\r\n  \"Cybersecurity\",\r\n  \"Project Management\",\r\n  \"Graphic Design\",\r\n  \"UX/ UI Design\",\r\n  \"Communication\",\r\n  \"Collaboration\",\r\n  \"Problem-Solving\",\r\n  \"Critical Thinking\",\r\n  \"Adaptability\",\r\n  \"Leadership\",\r\n  \"Organization\",\r\n  \"Negotiation\",\r\n  \"Innovation\",\r\n  \"Interpersonal Skills\",\r\n  \"Presentation\",\r\n  \"Swift\",\r\n  \"Go\",\r\n  \"PHP\",\r\n  \"React\",\r\n  \"Angular\",\r\n  \"Vue.js\",\r\n  \"Node.js\",\r\n  \"Statistical Analysis\",\r\n  \"R\",\r\n  \"Excel\",\r\n  \"Tableau\",\r\n  \"Power BI\",\r\n  \"MATLAB\",\r\n  \"Machine Learning Algorithms\",\r\n  \"Deep Learning Architecture\",\r\n  \"Natural Language Processing (NLP)\",\r\n  \"OpenCV\",\r\n  \"TensorFlow\",\r\n  \"PyTorch\",\r\n  \"OpenAI Gym\",\r\n  \"Stable Baselines\",\r\n  \"RLlib\",\r\n  \"Network protocols\",\r\n  \"Firewalls\",\r\n  \"Intrusion detection systems (IDS) and Intrusion prevention systems (IPS)\",\r\n  \"Virtual private networks (VPNs)\",\r\n  \"Vulnerability Assessment\",\r\n  \"Penetration Testing\",\r\n  \"Incident Response\",\r\n  \"Digital Forensics\",\r\n  \"Project Planning and Scheduling\",\r\n  \"Project Budgeting\",\r\n  \"Cost Management\",\r\n  \"Risk Management\",\r\n  \"Project Documentation\",\r\n  \"Project charters\",\r\n  \"Stakeholder communication plans\",\r\n  \"Change Management\",\r\n  \"Search Engine Optimization (SEO)\",\r\n  \"Search Engine Marketing (SEM)\",\r\n  \"Google Ads\",\r\n  \"Social Media Marketing\",\r\n  \"Content Marketing\",\r\n  \"Blog writing\",\r\n  \"A/B Testing\",\r\n  \"Marketing Automation\",\r\n  \"Conversion Rate Optimization (CRO)\",\r\n  \"User Experience (UX) Optimization\",\r\n  \"Influencer Marketing\",\r\n  \"Adobe Creative Suite (Adobe Photoshop, Illustrator, InDesign, etc.)\",\r\n  \"Typography\",\r\n  \"Layout Design\",\r\n  \"Color Theory\",\r\n  \"Visual brand identities\",\r\n  \"Illustration\",\r\n  \"Custom graphics\",\r\n  \"Image Editing and Retouching\",\r\n  \"Print Design\",\r\n  \"User Interface (UI) Design\",\r\n  \"Web Design\",\r\n  \"Project Closure and Evaluation\",\r\n  \"User Interviews\",\r\n  \"Surveys and Questionnaires\",\r\n  \"Usability Testing\",\r\n  \"Information Design\",\r\n  \"Wireframing\",\r\n  \"Interaction Design\",\r\n  \"Prototyping\",\r\n  \"Adobe XD\",\r\n  \"Sketch\",\r\n  \"Figma\",\r\n  \"InVision\",\r\n  \"Typography and Layout\",\r\n  \"Heatmaps\",\r\n  \"Microsoft Clarity\",\r\n  \"Hotjar\",\r\n  \"Crazy Egg\",\r\n  \"Data Analysis\",\r\n  \"Google Analytics\",\r\n  \"Mixpanel\",\r\n  \"Responsive Design\",\r\n  \"Accessibility Design\",\r\n  \"Teamwork\",\r\n  \"Respect\",\r\n  \"Trust building\",\r\n  \"Accountability\",\r\n  \"Mediation\",\r\n  \"Relationship building\",\r\n  \"Diplomacy\",\r\n  \"Active engagement\",\r\n  \"Delegation\",\r\n  \"Analytical skills\",\r\n  \"Data assessment\",\r\n  \"Evaluation\",\r\n  \"Creativity\",\r\n  \"Open-minded\",\r\n  \"Persistence\",\r\n  \"Agility\",\r\n  \"Identifying patterns\",\r\n  \"Reasoning\",\r\n  \"Logical and rational thinking processes\",\r\n  \"Data-based decision-making\",\r\n  \"Critical reading\",\r\n  \"Evidence-based reasoning\",\r\n  \"Systematic thinking\",\r\n  \"Resilience\",\r\n  \"Proactivity\",\r\n  \"Problem-solving\",\r\n  \"Learning agility\",\r\n  \"Self-motivation\",\r\n  \"Versatility\",\r\n  \"Accommodating change\",\r\n  \"Initiative\",\r\n  \"Self-confidence\",\r\n  \"Decision-making\",\r\n  \"Inspiration\",\r\n  \"Navigating challenges and change\",\r\n  \"Understanding different perspectives\",\r\n  \"Empathy\",\r\n  \"Compassion\",\r\n  \"Vision\",\r\n  \"Taking responsibility\",\r\n  \"Coaching\",\r\n  \"Mentoring\",\r\n  \"Providing feedback\",\r\n  \"Conflict resolution\",\r\n  \"Promoting teamwork\",\r\n  \"Honesty\",\r\n  \"Transparency\",\r\n  \"Work ethics\",\r\n  \"Influence\",\r\n  \"Empowerment\",\r\n  \"Personal and professional development\",\r\n  \"Time management\",\r\n  \"Strategizing\",\r\n  \"Prioritization\",\r\n  \"Attention to detail\",\r\n  \"Multitasking\",\r\n  \"Task delegation\",\r\n  \"Workflow optimization\",\r\n  \"Documentation\",\r\n  \"Record-keeping\",\r\n  \"Goal setting\",\r\n  \"Critical analysis\",\r\n  \"Mutual understanding\",\r\n  \"Flexibility\",\r\n  \"Sharing responsibilities\",\r\n  \"Valuing contributions\",\r\n  \"Assertiveness\",\r\n  \"Networking\",\r\n  \"Reliability\",\r\n  \"Integrity\",\r\n  \"CSS\"\r\n];\r\n\r\nexport default skillList;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSkills } from \"../redux\";\r\nimport skillList from \"../models/skillsList\";\r\n\r\nexport default function Skills({ setProgress }) {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [skillsInput, setSkillsInput] = useState(\"\");\r\n  const [filteredSkills, setFilteredSkills] = useState([]);\r\n  const [skillsArr, setSkillsArr] = useState(useSelector((state) => state.skills.skills));\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const initialVal = {\r\n    skills: \"\"\r\n  };\r\n\r\n  const handleSkillChange = (e) => {\r\n    const input = e.target.value;\r\n    setSkillsInput(input);\r\n\r\n    // Filter the skillList based on user input\r\n    const newFilteredSkills = skillList.filter((skill) => skill.toLowerCase().includes(input.toLowerCase()));\r\n\r\n    setFilteredSkills(newFilteredSkills);\r\n  };\r\n\r\n  const handleAddSkill = (skill) => {\r\n    // Add the skill to the skillsArr if it doesn't already exist\r\n    if (!skillsArr.includes(skill)) {\r\n      setSkillsArr((prevSkills) => [...prevSkills, skill]);\r\n    }\r\n\r\n    setSkillsInput(\"\"); // Clear the input field\r\n    setFilteredSkills([]); // Clear the filtered skills\r\n    setIsSubmitted(false);\r\n  };\r\n\r\n  const handleRemoveSkill = (skill) => {\r\n    // Remove the skill from the skillsArr\r\n    setSkillsArr((prevSkills) => prevSkills.filter((s) => s !== skill));\r\n  };\r\n\r\n  // Handle click outside to close autocomplete\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (inputRef.current && !inputRef.current.contains(event.target)) {\r\n        setFilteredSkills([]); // Clear filtered skills when clicking outside\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <span className=\"roboto-bold sm:text-3xl text-2xl\">Let’s note down your top skills.</span>\r\n      <Formik\r\n        initialValues={initialVal}\r\n        onSubmit={() => {\r\n          if (skillsArr.length < 5) {\r\n            setIsSubmitted(true); // Set error state if fewer than 5 skills\r\n          } else {\r\n            dispatch(setSkills(skillsArr));\r\n            setProgress();\r\n            navigate(\"/experience\");\r\n          }\r\n        }}\r\n        className=\"mt-5\"\r\n      >\r\n        <Form>\r\n          <div className=\"space-y-12\">\r\n            <div className=\"border-b border-gray-900/10 pb-12\">\r\n              <h2 className=\"text-base font-semibold leading-7 text-gray-900\">Skills</h2>\r\n              <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n                Add languages, frameworks, or tools that you are good with.\r\n              </p>\r\n              <div className=\"mt-5 grid sm:grid-cols-3 grid-cols-1 gap-x-6 gap-y-8\">\r\n                <div className=\"col-span-1\">\r\n                  <label htmlFor=\"skills\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n                    Skill\r\n                  </label>\r\n                  <div className=\"mt-2 relative\" ref={inputRef}>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={skillsInput}\r\n                      onChange={handleSkillChange}\r\n                      className=\"hover:shadow-md block w-full border-[0.5px] border-indigo-400 rounded bg-slate-50 p-2 text-indigo-600 shadow-sm placeholder:text-gray-400 sm:text-sm sm:leading-6 focus:outline-none focus:indigo-600 focus:ring-1 focus:ring-indigo-600\"\r\n                    />\r\n\r\n                    {/* Display autocomplete options */}\r\n                    {filteredSkills.length > 0 && (\r\n                      <div className=\"absolute mt-2 z-10 w-full border border-gray-200 bg-white shadow-sm rounded-md\">\r\n                        {filteredSkills.map((skill, index) => (\r\n                          <div\r\n                            key={index}\r\n                            onClick={() => handleAddSkill(skill)}\r\n                            className=\"px-3 py-1 hover:bg-gray-100 cursor-pointer\"\r\n                          >\r\n                            {skill}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {/* Error message if form is submitted with fewer than 5 skills */}\r\n                  {isSubmitted && skillsArr.length < 5 && (\r\n                    <span className=\"text-xs text-red-500\">Skills are required / Add at least 5 skills</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"sm:col-span-2 col-span-1\">\r\n                  <label className=\"block text-sm font-medium leading-6 text-gray-900\">Selected skills</label>\r\n                  <div className=\"flex flex-row flex-wrap p-1 mt-2 hover:shadow-md block w-full border-[0.5px] border-indigo-400 rounded bg-slate-50 min-h-10 text-indigo-600 shadow-sm placeholder:text-gray-400 sm:text-sm sm:leading-6\">\r\n                    {skillsArr.map((item, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"m-1 hover:bg-gray-300 flex flex-row gap-1 w-max py-1 px-2 border border-gray-500 bg-gray-200 rounded-2xl\"\r\n                      >\r\n                        <span>{item}</span>\r\n                        <XMarkIcon\r\n                          onClick={() => handleRemoveSkill(item)}\r\n                          className=\"cursor-pointer border bg-gray-300 border-gray-500 rounded-full mt-0.5 block h-5 w-5\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-6 flex items-center justify-end gap-x-6\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"rounded-md hover:bg-slate-200 px-3 py-2 text-sm font-semibold leading-6 text-gray-600\"\r\n              onClick={() => {\r\n                navigate(\"/education\");\r\n              }}\r\n            >\r\n              Back\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 rounded-md bg-indigo-700 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n"],"names":["setSkills","skillsState","type","SET_SKILLS","payload","Skills","_ref","setProgress","navigate","useNavigate","dispatch","useDispatch","skillsInput","setSkillsInput","useState","filteredSkills","setFilteredSkills","skillsArr","setSkillsArr","useSelector","state","skills","isSubmitted","setIsSubmitted","inputRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","_Fragment","children","_jsx","className","Formik","initialValues","onSubmit","length","Form","htmlFor","ref","value","onChange","e","input","newFilteredSkills","skillList","filter","skill","toLowerCase","includes","map","index","onClick","prevSkills","handleAddSkill","item","XMarkIcon","handleRemoveSkill","s"],"sourceRoot":""}